# Build containers
git clone https://github.com/tkubica12/kubernetes-demo

$rgName = "kubica-rg"
$registryName = "kubicakontejnery"

az group create -n $rgname -l westeurope
az acr create -n $registryName -g $rgname --sku Standard --admin-enabled  
az acr build -r $registryName --image mujweb:v1 ./kubernetes-demo/web/version1
az acr build -r $registryName --image mujweb:v2 ./kubernetes-demo/web/version2

# Run containers as container instance in Azure 
$acrUsername=$(az acr credential show -n $registryName --query username -o tsv)
$acrPassword=$(az acr credential show -n $registryName --query passwords[0].value -o tsv)

az container create -n mujweb `
    -g $rgname `
    -e "PORT=80" `
    --image "$registryName.azurecr.io/mujweb:v1" `
    --registry-password $acrPassword `
    --registry-username $acrUsername `
    --ip-address Public

# Use PaaS service with containers
Create WebApp
Add slot for v2 and show A/B testing
Scale out - show balancer via curl
Add 10% and show canary
Swap slots to move v2 to production
Add authentication via AAD

# Kubernetes
Create cluster via GUI

az aks get-credentials -n kubicacluster -n $rgname --admin

Apply deployment via GUI

kubectl get pod
kubectl delete pod myweb-deployment-5b568b9f67-fsxnk

Use GUI to change single pod label or:
kubectl edit pod myweb-deployment-5b568b9f67-tctnl   # Change label

kubectl port-forward pod myweb-deployment-5b568b9f67-z45pc 12345:80  # Click on open port in cloud shell

Apply service via GUI

Apply deployment via GUI and change image tag to v2

